<?php
/**
 * FileName: cvesearh.php
 *
 * PHP version 5
 *
 * @category Plot
 * @package  None
 * @author   aka <amit.agarwal@roamware.com>
 * @license  http://localhost/lic.html custom
 * @link     None
 *    Description: Search the CVE Database, php script.
 *                  The script downloads the required files, if not present.
 *                  You can search the CVE files based on ID or keyword
 *        Version: 1.0
 *        Created: Fri Sep 21, 2012  04:14PM
 *       Revision: none
 *         Author: Amit Agarwal (aka)
 *        Company: http://blog.amit-agarwal.co.in
 *  Last modified: Tue Dec 14, 2021  01:09PM
 */
global $debug;
$debug = 0;
global $mycve;
if ($debug) print "<pre>";
$headhtmlorig = <<<EOF
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PHP CVE Search - Amit Agarwal </title>

<!-- table style -->
<style>
table, th, td { border: 1px solid black; }
table { border-collapse: collapse; }
table, th, td { border: 1px solid black; }
table, td, th { border: 1px solid green; overflow: hidden; word-wrap: break-word; }
th { background-color: green; color: white; }
#cvetable { font-family: "Trebuchet MS", Arial, Helvetica, sans-serif; width: 100%; border-collapse: collapse; white-space: nowrap; }
#cvetable td, #cvetable th { font-size: 1em; border: 1px solid #98bf21; padding: 3px 7px 2px 7px; text-overflow: ellipsis; }
#cvetable th { font-size: 1.1em; text-align: left; padding-top: 5px; padding-bottom: 4px; background-color: #A7C942; color: #ffffff; }
#cvetable tr.alt td { color: #000000; background-color: #EAF2D3; }
caption { caption-side: top; }
table { border-collapse: collapse; width: 100%; } 
table, td, th { border: 1px solid black; } 
.collapse{ font-size: 16px; display:block; }
.collapse + input{ display:none; }
.collapse + input + *{ display:none; }
.collapse+ input:checked + *{ display:block; }
// body{ font-family: 'Open Sans', sans-serif; }
/ h1{ font-family: 'Tangerine', serif; font-size: 48px; text-align: center; }
// a:not([class]) { font-family: 'Yanone Kaffeesatz', sans-serif; font-size: 14px; }
</style>

<!-- Google Fonts
<link 
    href='http://fonts.googleapis.com/css?family=Open+Sans' 
    rel='stylesheet' 
    type='text/css'>
<link 
    rel="stylesheet" 
    type="text/css" 
    href="http://fonts.googleapis.com/css?family=Tangerine">
<link 
    href='http://fonts.googleapis.com/css?family=Inconsolata' 
    rel='stylesheet' 
    type='text/css'>
<link 
    href='http://fonts.googleapis.com/css?family=Yanone+Kaffeesatz' 
    rel='stylesheet' 
    type='text/css'>

-->
</head>
<body>
<h1>CVE Search - Amit Agarwal</h1>
<h1><a class="none" href="http://blog.amit-agarwal.co.in">My Blog</a></h1>
<form action="?">
ID: <input type="text" name="id"> OR
Keyword: <input type="text" name="kwd">
 <input type="radio" name="exact" value="true">Exact Match
 <input type="submit" value="Submit">
</form> 
EOF;
$headhtml = preg_replace('/[\n\r\s]+/', " ", trim($headhtmlorig));
if (!array_key_exists('id', $_REQUEST) || !array_key_exists('kwd', $_REQUEST)) {
    debug("No input ... just print the form");
    print $headhtml;
} else {
    if (array_key_exists('id', $_REQUEST)) $searchid = $_REQUEST['id'];
    if (array_key_exists('kwd', $_REQUEST)) $searchkwd = $_REQUEST['kwd'];
    if (array_key_exists('exact', $_REQUEST)) $exactmatch = $_REQUEST['exact'];
    else $exactmatch = "";
    global $mycve;
    $headerf = "%20s\t%20s\t%40s\n";
    $header = array("CVE ID", "Title", "Notes");
    $path = ".";
    function DownlodFile($year = 15) {
        debug("Getting the file for $year");
        file_put_contents("allitems-cvrf-year-$year.xml", file_get_contents("http://cve.mitre.org/data/downloads/allitems-cvrf-year-$year.xml"));
        return;
    }
    function printcve($mcount = 0) {
        global $mycve;
        //print_r($mycve);
        $cve = $mycve->Vulnerability[$mcount]->CVE;
        print "<td>" . $mycve->Vulnerability[$mcount]->CVE . "</td>";
        print "<td>" . $mycve->Vulnerability[$mcount]->Title . "</td>";
        print "<td>";
        /*foreach ($mycve->Vulnerability[$mcount] as $key => $value ) {
        print "Key: $key, Value=> value\n";
        } */
        debug($mycve->Vulnerability[$mcount]->CVE);
        debug($mycve->Vulnerability[$mcount]->Title);
        debug("Notes: \n");
        debug($mycve->Vulnerability[$mcount]->Notes);
        foreach ($mycve->Vulnerability[$mcount]->Notes->Note as $key => $value) {
            debug("Key: $key");
            debug($value);
            // print "== Note $key: ". $value;
            print str_replace(array("\n", "\r"), ' ', $value);
        }
        echo <<<EOF
  <label class="collapse" for="_$mcount">
        References $cve (Click to expand) </label>
  <input id="_$mcount" type="checkbox">
  <div>
EOF;
        print "References:<br>";
        foreach ($mycve->Vulnerability[$mcount]->References->Reference as $key => $value) {
            debug("Key: $key");
            debug($value);
            //print "== Note $key: ". $value;
            print "<a href='" . $value->URL . "'>" . $value->Description . "</a><br>";
        }
        print "</div></td>\n";
    }
    $count = 0;
    $mcount = 0;
    $y = date("y");
    for ($i = 8;$i <= $y;$i++) {
        $a = $path . sprintf("/%s-20%02d.xml", "allitems-cvrf-year", $i);
        if (file_exists($a)) {
            debug("File $a exists");
            //Do Nothing
            
        } else {
            //echo "download file for $i\n";
            DownlodFile(sprintf("20%02d", $i));
        }
        $year = date("Y");
        if (time() - filemtime("allitems-cvrf-year-".$year.".xml") > 6*3600) DownlodFile($year);
        //print $a."\n";;
        $mycve1 = simplexml_load_file($a);
        // Un-comment below to see the complete data ...
        //foreach ( explode ('\n', print_r($mycve)) as $val ) debug ($val);
        //
        foreach ($mycve1->Vulnerability as $key => $value) {
            if (!empty($searchid)) {
                //debug( "Searching with ID: $searchid");
                if ($exactmatch == "true") $pat = '/^CVE-\d{4}-' . sprintf("%04d", $searchid) . '/';
                else $pat = "/$searchid/";
                //debug( "matching pattern : $pati against ".$value->CVE);
                if (preg_match($pat, $value->CVE)) {
                    $mycve->Vulnerability[$mcount++] = $value;
                    debug("Setting mcount to " . $mcount . "for count $count ");
                }
            } else if (!empty($searchkwd)) {
                $found = 0;
                if (preg_match('/\s+/', $searchkwd)) $pat = preg_replace('/\s+/', '|', $searchkwd);
                else $pat = $searchkwd;
                if ($exactmatch == "true") $pat = '/' . $pat . '/';
                else $pat = '/' . $pat . '/i';
                //debug( "Searching for $pat");
                foreach ($value->Notes->Note as $key => $val) {
                    if (preg_match($pat, $val)) $found = 1;
                }
                if (is_array($value->References->Reference)) foreach ($value->References->Reference as $key => $val1) {
                    debug("Searching in " . $val1->Description);
                    if (preg_match($pat, $val1->Description)) {
                        $found = 1;
                        debug("Found $pat in " . $value->CVE);
                    }
                    if (preg_match($pat, $val1->URL)) {
                        $found = 1;
                        debug("Found $pat in " . $value->CVE);
                    }
                }
                if ($found) {
                    $mycve->Vulnerability[$mcount++] = $value;
                    debug("Adding $mcount to CVE for $count");
                    //print_r($value);
                    
                }
            }
            $count++;
        }
    }
    // print_r ($mycve->Vulnerability);
    echo <<<EOF
$headhtml
<table>
<thead>
<tr>
<td>$header[0]</td>
<td>$header[1]</td>
<td>$header[2]</td>
</tr>
</thead>
<tbody>
EOF;
    echo "<b>Found $mcount matches</b>";
    for ($i = 0;$i < $mcount;$i++) {
        //foreach ($mcount as $value) {
        if ( $alt ==0 ) { print "<tr class=alt>";$alt=1;}
        else { print "<tr>";$alt=0;}

        printcve($i);
        print "</tr>";
    }
    echo <<<EOF
</tbody>
</table>
</body>
</html>
EOF;
    
}
function debug($line = NULL) {
    global $debug;
    if ($debug == 0) return;
    //$a = get_caller();
    $stack = debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS);
    $a[3] = end(explode('/', $stack[0]['file']));
    $a[2] = $stack[0]['line'];
    $a[0] = date('m/d/Y h:i:s a', time());
    if (is_array($line)) {
        $a[1] = "Printing Array";
        printf("DEBUG>> %s|%-100s|%s|%s\n", $a[0], $a[1], $a[2], $a[3]);
        foreach ($line as $key => $val) {
            if (is_array($val)) {
                $a[1] = "Printing array ==> $key";
                printf("DEBUG>> %s|%-100s|%s|%s\n", $a[0], $a[1], $a[2], $a[3]);
                $iii = explode("\n", print_r($val, true));
                foreach ($iii as $jjj) {
                    $a[1] = "$jjj";
                    printf("DEBUG>> %s|%-100s|%s|%s\n", $a[0], $a[1], $a[2], $a[3]);
                }
            } else {
                $a[1] = "$key => $val";
                printf("DEBUG>> %s|%-100s|%s|%s\n", $a[0], $a[1], $a[2], $a[3]);
            }
        }
    } else {
        $l = preg_replace('/[\r\n|\r|\n|\n\r]+/', '', $line);
        printf("DEBUG>> %s|%-100s|%s|%s\n", $a[0], $l, $a[2], $a[3]);
    }
}
?>
