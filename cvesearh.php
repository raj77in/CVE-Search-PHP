<?php
/**
 * FileName: cvesearh.php
 *
 * PHP version 5
 *
 * @category Plot
 * @package  None
 * @author   aka <amit.agarwal@roamware.com>
 * @license  http://localhost/lic.html custom
 * @link     None
 *    Description: Search the CVE Database, php script. 
 *                  The script downloads the required files, if not present.
 *                  You can search the CVE files based on ID or keyword
 *        Version: 1.0
 *        Created: Fri Sep 21, 2012  04:14PM
 *       Revision: none
 *         Author: Amit Agarwal (aka)
 *        Company: http://blog.amit-agarwal.co.in
 *  Last modified: Fri Oct 17, 2014  08:12PM
 */

$headhtmlorig = <<<EOF
<html>
<<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PHP CVE Search - Amit Agarwal </title>
<!-- Google Fonts -->
<link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>
<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Tangerine">
<link href='http://fonts.googleapis.com/css?family=Inconsolata' rel='stylesheet' type='text/css'>
<link href='http://fonts.googleapis.com/css?family=Yanone+Kaffeesatz' rel='stylesheet' type='text/css'>


<style>
table { border-collapse: collapse; width: 100%; } 
table, td, th { border: 1px solid black; } 
.collapse{ font-size: 16px; display:block; }
.collapse + input{ display:none; }
.collapse + input + *{ display:none; }
.collapse+ input:checked + *{ display:block; }
body{ font-family: 'Open Sans', sans-serif; }
h1{ font-family: 'Tangerine', serif; font-size: 48px; text-align: center; }
a:not([class]) { font-family: 'Yanone Kaffeesatz', sans-serif; font-size: 14px; }
</style> </head> <body> <h1>CVE Search - Amit Agarwal</h1> <h1><a class="none" href="http://blog.amit-agarwal.co.in">My Blog</a></h1>
<form action="?">
ID: <input type="text" name="id"> OR
Keyword: <input type="text" name="kwd">
 <input type="radio" name="exact" value="true">Exact Match
 <input type="submit" value="Submit">
</form> 
EOF;
$headhtml=preg_replace('/[\n\r\s]+/', " ",trim($headhtmlorig));
if ( ! array_key_exists('id', $_REQUEST) || ! array_key_exists('kwd', $_REQUEST)  ) {
    print $headhtml;
    //Do Nothing
}
else {
    if ( array_key_exists('id', $_REQUEST) ) $searchid=$_REQUEST['id'];
    if ( array_key_exists('kwd', $_REQUEST) ) $searchkwd=$_REQUEST['kwd'];
    $exactmatch=$_REQUEST['exact'];
    global $mycve ;
    $headerf="%20s\t%20s\t%40s\n";
    $header=array( "CVE ID", "Title", "Notes" );
    $path="/mnt/Data/Documents/git/my/git-my/work/Security/exploit-db.com/CVE";
    $path=".";

    function DownlodFile($year=14){
        file_put_contents("allitems-cvrf-year-$year.xml",
            file_get_contents(
                "http://cve.mitre.org/data/downloads/allitems-cvrf-year-$year.xml" )
            );
        return;
        set_time_limit(0); // unlimited max execution time
        $options = array(
            CURLOPT_FILE    => "./allitems-cvrf-year-$year.xml",
            CURLOPT_TIMEOUT =>  28800, // set this to 8 hours so we dont timeout on big files
            CURLOPT_URL     => "https://cve.mitre.org/data/downloads/allitems-cvrf-year-$year.xml",
        );

        $ch = curl_init();
        curl_setopt_array($ch, $options);
        curl_exec($ch);
        curl_close($ch);
        exit;
    }
    function printcve($mcount=0) {
        global $mycve;
        $cve=$mycve->Vulnerability[$mcount]->CVE;
        print "<td>".$mycve->Vulnerability[$mcount]->CVE."</td>";
        print "<td>".$mycve->Vulnerability[$mcount]->Title."</td>";
        print "<td>";
    /*foreach ($mycve->Vulnerability[$mcount] as $key => $value ) {
        print "Key: $key, Value=> value\n";
    } */
        //printf("%20s\t", $mycve->Vulnerability[$mcount]->CVE);
        //printf("%20s\t", $mycve->Vulnerability[$mcount]->Title);

        //echo nl2br(str_replace(' ', ' ', print_r($mycve->Vulnerability[$mcount]->Notes, true)));
        //print "Notes: \n";
        //print_r( $mycve->Vulnerability[$mcount]->Notes );
        foreach ( $mycve->Vulnerability[$mcount]->Notes->Note as $key=>$value) {
            //print "Key: $key\n";
            //print_r( $value );
            // print "== Note $key: ". $value;
            print str_replace(array("\n", "\r"), ' ', $value);
        }
        echo <<<EOF
  <label class="collapse" for="_$mcount">References $cve (Click to expand) </label>
  <input id="_$mcount" type="checkbox">
  <div>
EOF;
        print "References:<br>";
        foreach ( $mycve->Vulnerability[$mcount]->References->Reference as $key=>$value) {
            //print "Key: $key\n";
            //print_r( $value );
            //print "== Note $key: ". $value;
            print "<a href='".$value->URL."'>".$value->Description."</a><br>";
        }
        print "</div></td>\n";
    }

    $arr=array();
    $count=0;
    $mcount=array();
    for ( $i =8 ; $i <= 14 ; $i ++) {
        $a=$path.sprintf ("/%s-20%02d.xml", "allitems-cvrf-year", $i);
        if ( file_exists($a) ){
            //echo "File $a exists\n";
            //Do Nothing
        }
        else {
            //echo "download file for $i\n";
            DownlodFile(sprintf("20%02d",$i));
        }
        //print $a."\n";;
        $mycve1 = simplexml_load_file($a);
        //print_r($mycve);
        //
        foreach ( $mycve1->Vulnerability as $key => $value) {
            $mycve->Vulnerability[$count] = $value;
            $arr[$count]=$value->CVE;
            //print_r($value->CVE);
            //print "Key is $key\n";
            //echo "Start Searching\n";
            if ( ! empty ($searchid) ) {
                //print "Searching with ID:";
                if ($exactmatch == "true" ) $pat='/^CVE-\d{4}-'.sprintf("%04d",$searchid).'/';
                else $pat="/$searchid/";
                // echo "matching pattern : $pati against ".$value->CVE." \n";
                if ( preg_match($pat, $value->CVE) ) {
                    array_push($mcount,$count);
                    //print "Setting mcount to ".$count."\n";
                }
            }
            if ( ! empty($searchkwd) ) {
                $found=0;

                if (preg_match("/\s+/",$searchkwd) ) $pat=preg_replace('/\s+/','|',$searchkwd);
                else $pat=$searchkwd;
                //echo "Searching for $pat";
                foreach ( $value->Notes->Note as $key=>$value) {
                    if ( preg_match ('/'.$pat.'/i', $value) ) 
                        $found=1;
                }
                foreach ( $value->References->Reference as $key=>$value) {
                    if ( preg_match ('/'.$pat.'/i', $value) ) 
                        $found=1;
                }
                if ($found) array_push($mcount,$count);
            }

            $count++;
        }
    }
    //print_r ($mycve->Vulnerability[$mcount]);
    #print_r($arr);
    # array_search ("CVE-2014-0340", $mycve);
    #
    //printf( $headerf, $header[0], $header[1], $header[2]);
    echo <<<EOF
$headhtml
<table>
<thead>
<tr>
<td>$header[0]</td>
<td>$header[1]</td>
<td>$header[2]</td>
</tr>
</thead>
<tbody>
EOF;
    foreach ($mcount as $value) {
        print "<tr>";
        printcve($value);
        print "</tr>";
    }
    echo <<<EOF
</tbody>
</table>
</body>
</html>
EOF;
}
?>
